#    Author:  a101269
#    Date  :  2020/5/9
from tqdm import tqdm
lookup_table1={}
lookup_table2 = {}

own_kvs={'处所':'处所','城市':'处所','地点':'处所','地名':'处所','地址':'处所','地理':'处所','空间':'处所','国籍':'处所',
          '天体':'处所','地表':'处所','地貌':'处所','行政区划':'处所','陵墓':'处所','山脉':'处所','河流':'处所',
          '日期':'时间', '朝代':'时间',
          '数目':'数目','数量': '数目','比例':'数目',
          '机构': '机构','组织': '机构', '公司': '机构', '团体': '机构','集体':'机构','医院':'机构',
          '政府':'机构','军队':'机构','工厂':'机构','国家': '机构',
          '人物':'人', '人名':'人','亲属':'人','职业':'人', '职务':'人','身份':'人','人类':'人',
          '动物': '动物','兽': '动物', '昆虫':'动物', '鱼':'动物','爬行动物':'动物','微生物':'动物',
          '植物':'植物', '庄稼':'植物', '树':'植物', '草':'植物','花':'植物','水果':'植物',
          '工具':'工具','用具':'工具','器械':'工具','器材':'工具','乐器':'工具', '电器':'工具',
          '器具':'工具','炊具':'工具','厨房用具':'工具','运动器械':'工具','文具':'工具',
          '家具':'工具','化妆品':'工具','硬件':'工具','机器':'工具',
          '交通工具':'交通工具','车辆':'交通工具','船':'交通工具','飞机':'交通工具','飞行器':'交通工具',
          '属性': '属性', '颜色': '属性', '外观': '属性', '外形': '属性', '外貌': '属性', '性格': '属性',
          '材料':'材料','矿物': '材料', '化合物': '材料',
          '药物':'药物', '药品':'药物',
          '作品':'作品','软件':'作品', '符号':'作品','证书':'作品','票据':'作品','律法':'作品',
          '理论':'抽象','法规':'抽象','信息':'抽象',
          '生理': '生理', '疾病':'生理',
          '心理':'心理','情感':'心理', '意识':'心理', '人性':'心理','动机':'心理',
          '事件': '事件', '事务': '事件', '事情':'事件','手术':'事件', '过程':'事件','活动':'事件',
          '时间': '时间','学校':'机构','货币':'货币','书':'作品',
          '衣服':'衣服', '衣物': '衣物', '服饰': '衣物',
          '食物': '食物','食品': '食物','建筑':'建筑',# '性能': '性能','方位':'方位',
         #'搭配': '搭配'搭配带序号的，不能重复,# '生物': '生物',
         #'气象': '现象', '自然现象': '现象',
          }
key_word=[
          '国家','国籍','处所', '城市', '地点', '地名', '地址', '地理', '空间', '天体', '地表', '地貌','河流', '日期','山脉', '陵墓','行政区划','朝代',
          '数目', '数量', '比例', '机构', '组织', '公司', '团体', '集体', '医院', '政府', '军队', '工厂',
          '动物', '兽', '昆虫', '鱼', '爬行动物', '微生物', '植物', '庄稼', '树', '草', '花', '水果',
          '工具', '用具', '器械', '器材', '乐器', '电器', '器具', '炊具', '厨房用具', '运动器械', '文具', '家具', '电器',
          '化妆品', '硬件', '机器', '交通工具', '车辆', '船', '飞机', '飞行器', '属性', '颜色', '外观', '外形',
          '外貌', '性格', '材料', '矿物', '化合物', '药物','药品', '药','作品', '软件', '符号', '证书', '票据', '理论', '法规', '信息',
          '生理', '疾病', '心理', '情感', '意识', '人性', '动机', '事件', '事务', '事情', '手术', '过程', '活动',  '食物','食品', '建筑',
          '人物',  '人名', '亲属', '职业', '职务', '身份', '人类','衣服', '衣物', '服饰','时间','学校','货币','书',
]



with open('w2o_info.txt', 'r', encoding='utf-8') as f:
    for line in tqdm(f):
        try:
            subj,pos,obje = line.strip().split("\t")
        except:
            pass
        if pos=='noun':
            values = obje.split('|')
            if subj in lookup_table2.keys():
                for value in values:
                    value=value.strip('_部件')
                    lookup_table2[subj].add(value)
            else:
                for i,value in enumerate(values):
                    if i==0:
                        lookup_table2[subj] = set([value])
                    else:
                        lookup_table2[subj].add(value)

with open('entiry_typing_result', 'r', encoding='utf-8') as f:
    for line in tqdm(f):
        try:
            subj,obje,dis = line.strip().split("\t")
            value = obje
            dis = float(dis)
            if dis < 17:
                lookup_table1[subj] = value
                if subj=='小米':
                    print(value)
            else:
                if subj in lookup_table2.keys():
                    for kw in key_word:
                        if kw in lookup_table2[subj]:
                            lookup_table1[subj] = kw
                            break
                    if subj == '小米':
                        print(lookup_table1[subj] )
                else:
                    lookup_table1[subj] = '_'
        except:
            pass


# for k2,v2 in lookup_table2.items():
#     for kw in key_word:
#         if kw in v2:
#             v2 = kw
#     if k2 in lookup_table1.keys():
#         lookup_table1[k2]=v2


fw=open('kg_entity_typing','w')
# fw2=open('mydict','w',encoding='utf')
for k,v in tqdm(lookup_table1.items()):
    fw.write(k+'\t'+v+'\n')
fw.close()
