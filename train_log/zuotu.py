#    Author:  Dianqing.liu
#    Date  :  2020/2/10

import matplotlib.pyplot as plt
import numpy as np

# '''柱状2'''
# xx = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
# y1 = [6, 5, 8, 5, 6, 6, 8, 9, 8, 10]
# y2 = [5, 3.4, 6, 4, 3, 4, 7, 4, 4, 6]
# y3 = [4, 1, 2, 1, 2, 1, 6, 2, 3, 2]
#
# plt.bar(xx, y1, label="label1", color='red')
# plt.bar(xx, y2, label="label2",color='orange')
# plt.bar(xx, y3, label="label3", color='lightgreen')
#
# for yy in [y1,y2,y3]:
#     for x, y in zip(xx, yy):
#         plt.text(x,  y , '%.2f' % y, ha='center', va='bottom',fontsize=7)
#
# plt.legend(loc="upper left")  # 防止label和图像重合显示不出来
# plt.rcParams['font.sans-serif'] = ['SimHei']  # 用来正常显示中文标签
# plt.ylabel('数量')
# plt.xlabel('name')
# plt.title("title")
# plt.show()

'''柱状1'''
# k = 10
# y = [45,76,67,78,86,64,53]
# x = [1,2,3,4,5,6,7]
# plt.bar(x, y) # 画出 x 和 y 的柱状图
#
# # 增加数值
# for x, y in zip(x, y):
#     plt.text(x, y , '%.2f' % y, ha='center', va='bottom')
# plt.rcParams['savefig.dpi'] = 300  # 图片像素
# plt.rcParams['figure.dpi'] = 300  # 分辨率
# plt.rcParams['figure.figsize'] = (15.0, 8.0)  # 尺寸
# plt.savefig('D:\\result.png')
# plt.show()



'''折线'''
plt.rcParams['font.sans-serif']=['SimHei'] #用来正常显示中文标签
plt.rcParams['axes.unicode_minus']=False #用来正常显示负号

x =[0, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 10.5, 11, 11.5, 12, 12.5, 13, 13.5, 14, 14.5, 15, 15.5, 16, 16.5, 17, 17.5, 18, 18.5, 19, 19.5, 20, 20.5,21, 21.5, 22, 22.2,22.4,22.6,22.8,23, 23.2,23.4, 23.6,23.8,24,24.2,24.4,24.6,24.8,24.9,  25,25.2,25.4,25.6, 25.8, 26,26.2,26.4,26.6, 26.8,27,27.2,27.4,27.6,27.8, 28,28.2,28.4,28.6,28.8,28.9, 29,29.2,29.4,29.6,29.8, 30,30.01,30.02,30.03,30.04]
y = [0.0221, 0.2326, 0.2552, 0.5092, 0.6603, 0.8228, 0.8596, 0.8789, 0.8876, 0.8959, 0.8998, 0.9021, 0.9035, 0.9017, 0.9048, 0.9055, 0.9094, 0.9087, 0.9104, 0.9105, 0.9109, 0.9115, 0.9122, 0.9142, 0.9136, 0.912, 0.9139, 0.9136, 0.9143, 0.9143, 0.9132, 0.9145, 0.9149, 0.9156, 0.9165, 0.9164, 0.9155, 0.9156, 0.9151, 0.9153, 0.9169, 0.9167, 0.9155, 0.9163, 0.9155, 0.916, 0.9155, 0.9162, 0.9149, 0.9156, 0.9145, 0.9147, 0.9142, 0.9165, 0.9169, 0.9164, 0.9165, 0.916, 0.9174, 0.9166, 0.9164, 0.9155, 0.9169, 0.9154, 0.9169, 0.9167, 0.9176, 0.9172, 0.9171, 0.9177, 0.9169, 0.9178, 0.9177, 0.9172, 0.9178, 0.9184, 0.9176, 0.9178, 0.9182, 0.9183, 0.9179, 0.9182, 0.9179, 0.9177, 0.9178, 0.9172, 0.9175, 0.9178, 0.9176, 0.9177]
x2 =[0, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 10.5, 11, 11.5, 12, 12.5, 13, 13.5, 14, 14.5, 15, 15.5, 16, 16.5, 17, 17.5, 18, 18.5, 19, 19.5, 20, 20.5,21, 21.5, 22, 22.2,22.4,22.6,22.8,23, 23.2,23.4, 23.6,23.8,24,24.2,24.4,24.6,24.8,24.9,  25,25.2,25.4,25.6, 25.8, 26,26.2,26.4,26.6, 26.8,27,27.2,27.4,27.6,27.8, 28,28.2,28.4,28.6,28.8,28.9, 29,29.2,29.4,29.6,29.8, 30,30.01,30.02,30.03,30.04,]
y2 = [0.0064, 0.06, 0.05, 0.2285, 0.4084, 0.6355, 0.7096, 0.744, 0.7596, 0.7827, 0.7899, 0.7982, 0.7984, 0.8039, 0.8042, 0.8102, 0.8145, 0.8165, 0.8186, 0.8172, 0.8199, 0.8216, 0.8235, 0.8246, 0.8244, 0.8248, 0.8248, 0.8269, 0.826, 0.8278, 0.8244, 0.8267, 0.8257, 0.8287, 0.8289, 0.8289, 0.8271, 0.8263, 0.8286, 0.8268, 0.8292, 0.8281, 0.8281, 0.8301, 0.8282, 0.8288, 0.8291, 0.8281, 0.8287, 0.8277, 0.8279, 0.8291, 0.8281, 0.8292, 0.8297, 0.8281, 0.8288, 0.8285, 0.8307, 0.8302, 0.8296, 0.8273, 0.8294, 0.8286, 0.8294, 0.8314, 0.8318, 0.8303, 0.8308, 0.8317, 0.8304, 0.8315, 0.8314, 0.8316, 0.8321, 0.8321, 0.8308, 0.8315, 0.8321, 0.8329, 0.832, 0.8328, 0.8322, 0.8316, 0.8323, 0.8321, 0.8321, 0.8326, 0.8325, 0.8326]
#去掉边框
fig, ax=plt.subplots()
ax.spines['top'].set_visible(False)
ax.spines['right'].set_visible(False)
# ax.spines['bottom'].set_visible(False)
# ax.spines['left'].set_visible(False)
# plt.title('xxx折线图')
plt.xlabel('epoch')
plt.ylabel('F-Score')
plt.plot(x, y,label='UF', linewidth=1)
plt.plot(x2, y2,label='LF', linewidth=1)
# # plt.plot(x3, y3,label='+pos&know', linewidth=0.8)
# plt.plot(x4, y4,label='+lstm&self-attention', linewidth=0.8)
#显示图形的图例
plt.legend()
plt.savefig('G:\研究生\parser文献\\NLPCC2020\\导出的图片.png')#保存图片
plt.show()
